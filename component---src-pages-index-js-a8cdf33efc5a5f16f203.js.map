{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["HomePageTemplate","home","className","headerImage","src","image","alt","imageAlt","title","titleDescription","linkType","callToActions","firstCTA","linkURL","heading","subHeading","secondCTA","HomePage","render","data","this","props","footerData","navbarData","homePageData","edges","node","frontmatter","seo","seoTitle","seoDescription","description","browserTitle","name","content","React","Component"],"mappings":"4PASaA,G,UAAmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjC,OACE,oCACE,6BAASC,UAAU,UACjB,yBAAKA,UAAU,+BACZD,EAAKE,aACJ,yBACED,UAAU,eACVE,IAAKH,EAAKE,YAAYE,MACtBC,IAAKL,EAAKE,YAAYI,WAG1B,uBAAGL,UAAU,kBACX,0BAAMA,UAAU,sBAAsBD,EAAKO,UAIjD,6BAASN,UAAU,uBACjB,yBAAKA,UAAU,oCACb,uBAAGA,UAAU,qBAAqBD,EAAKQ,oBAG3C,6BAASP,UAAU,YACjB,kBAAC,IAAD,CACEQ,SAAUT,EAAKU,cAAcC,SAASF,SACtCG,QAASZ,EAAKU,cAAcC,SAASC,QACrCX,UAAU,6CAEV,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,uBACbD,EAAKU,cAAcC,SAASE,SAE/B,uBAAGZ,UAAU,2BACVD,EAAKU,cAAcC,SAASG,cAInC,kBAAC,IAAD,CACEL,SAAUT,EAAKU,cAAcK,UAAUN,SACvCG,QAASZ,EAAKU,cAAcK,UAAUH,QACtCX,UAAU,8CAEV,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,uBACbD,EAAKU,cAAcK,UAAUF,SAEhC,uBAAGZ,UAAU,2BACVD,EAAKU,cAAcK,UAAUD,kBAStCE,E,kGACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KADD,EAIHC,KAAKC,MADPF,KAAQG,EAHH,EAGGA,WAAYC,EAHf,EAGeA,WAEDtB,EAASkB,EAAKK,aAAaC,MAAM,GAAGC,KAAjDC,YALD,EAQH1B,EADF2B,IAAcC,EAPT,EAOErB,MAA8BsB,EAPhC,EAOmBC,YAA6BC,EAPhD,EAOgDA,aAEvD,OACE,kBAAC,IAAD,CAAQV,WAAYA,EAAYC,WAAYA,GAC1C,kBAAC,IAAD,KACE,0BAAMU,KAAK,QAAQC,QAASL,IAC5B,0BAAMI,KAAK,cAAcC,QAASJ,IAClC,+BAAQE,IAEV,kBAAChC,EAAD,CAAkBC,KAAMA,M,GAjBTkC,IAAMC,WA+BdnB","file":"component---src-pages-index-js-a8cdf33efc5a5f16f203.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport CustomLink from '../components/CustomLink'\nimport '../styles/home.scss'\n\nexport const HomePageTemplate = ({ home }) => {\n  return (\n    <>\n      <section className='header'>\n        <div className='header-container  container'>\n          {home.headerImage && (\n            <img\n              className='header-image'\n              src={home.headerImage.image}\n              alt={home.headerImage.imageAlt}\n            />\n          )}\n          <p className='header-tagline'>\n            <span className='header-taglinePart'>{home.title}</span>\n          </p>\n        </div>\n      </section>\n      <section className='description section'>\n        <div className='description-container  container'>\n          <p className='description-title'>{home.titleDescription}</p>\n        </div>\n      </section>\n      <section className='ctaBlock'>\n        <CustomLink\n          linkType={home.callToActions.firstCTA.linkType}\n          linkURL={home.callToActions.firstCTA.linkURL}\n          className='ctaBlock-pattern  ctaBlock-pattern--first'\n        >\n          <div className='ctaBlock-cta'>\n            <span className='ctaBlock-ctaHeading'>\n              {home.callToActions.firstCTA.heading}\n            </span>\n            <p className='ctaBlock-ctaDescription'>\n              {home.callToActions.firstCTA.subHeading}\n            </p>\n          </div>\n        </CustomLink>\n        <CustomLink\n          linkType={home.callToActions.secondCTA.linkType}\n          linkURL={home.callToActions.secondCTA.linkURL}\n          className='ctaBlock-pattern  ctaBlock-pattern--second'\n        >\n          <div className='ctaBlock-cta'>\n            <span className='ctaBlock-ctaHeading'>\n              {home.callToActions.secondCTA.heading}\n            </span>\n            <p className='ctaBlock-ctaDescription'>\n              {home.callToActions.secondCTA.subHeading}\n            </p>\n          </div>\n        </CustomLink>\n      </section>\n    </>\n  )\n}\n\nclass HomePage extends React.Component {\n  render() {\n    const { data } = this.props\n    const {\n      data: { footerData, navbarData },\n    } = this.props\n    const { frontmatter: home } = data.homePageData.edges[0].node\n    const {\n      seo: { title: seoTitle, description: seoDescription, browserTitle },\n    } = home\n    return (\n      <Layout footerData={footerData} navbarData={navbarData}>\n        <Helmet>\n          <meta name='title' content={seoTitle} />\n          <meta name='description' content={seoDescription} />\n          <title>{browserTitle}</title>\n        </Helmet>\n        <HomePageTemplate home={home} />\n      </Layout>\n    )\n  }\n}\n\nHomePage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n  query HomePageQuery {\n    ...LayoutFragment\n    homePageData: allMarkdownRemark(\n      filter: { frontmatter: { templateKey: { eq: \"home-page\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            titleDescription\n            headerImage {\n              image\n              imageAlt\n            }\n            callToActions {\n              firstCTA {\n                heading\n                subHeading\n                linkType\n                linkURL\n              }\n              secondCTA {\n                heading\n                subHeading\n                linkType\n                linkURL\n              }\n            }\n            seo {\n              browserTitle\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}